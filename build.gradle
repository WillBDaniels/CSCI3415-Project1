apply from: 'javafx.plugin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'


sourceCompatibility = '1.8'
def mainClassName = "edu.csci.hw1.Calculator"
def mainAppName = "Simple Java Calculator"
def versionNumber = "1.0"
jfxJar.enabled = false;
jfxCopyLibs.enabled = false;


dependencies {
    testCompile 'junit:junit:4.11'
}
repositories {
    mavenCentral()
}
task wrapper(type: Wrapper){
    gradleVersion = '2.0'
}

javafx {
    appID '{C15A6650-A798-479A-B8F2-F83C6725BAB7}'
    mainClass = mainClassName
    appName = mainAppName

    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
    arguments = ['-1', '--fast', '-Xlint:deprecation']
    systemProperties = [ 'prism.disableRegionCaching':'true' ]
    arguments = ['1AC', '1NC', '2AC', '2NC', '1NR', '1AR', '2NR', '2AR']

    embedLauncher = true // caution: class-path not set and is overwritten if set to false

    // applet and webstart stuff
    width = 800
    height = 600
    embedJNLP = false
    icons {
        shortcut = ['icons/icon32.png', 'icons/icon64.png', 'icons/icon128.png']
    }

    // deplpy/info attributes
    category = 'production'
    description = 'This is a homework project for csci 3415'
    licenseType = '3 clause BSD'
    vendor = 'William Daniels'

    // deploy/preferences attributes
    installSystemWide = true
    menu = true
    shortcut = true

    // app icons
}
jar{
    from {configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest{
        attributes("Main-Class": mainClassName);
    }
}



task copyFinalZip (type: Copy){
    from ('build/distributions'){
        include '*.zip'
    }
    into 'Zipped_Builds/'
}

task zipEverything(type: Zip){
    baseName = mainAppName
    classifier = versionNumber
    from 'build/distributions/bundles/'
}



build.dependsOn (  assemble, zipEverything, copyFinalZip)
task zipEverything.mustRunAfter ( assemble)
task copyFinalZip.mustRunAfter  (zipEverything)
task all (dependsOn: [build])
